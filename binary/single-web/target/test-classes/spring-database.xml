<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		  http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
          http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
          http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
          http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
          

	<bean id="dataSource" class="com.binary.framework.spring.DataSourceAdapter">
		<constructor-arg>
			<bean class="com.binary.jdbc.JdbcOperatorFactory">
				<constructor-arg>
					<bean class="com.binary.jdbc.JdbcOperatorConfig">
						<property name="printerType" value="DEBUG" />
						<property name="printerWriterType" value="CONSOLE" />
						<property name="defaultDataSource" value="${ds.jdbc.dsname}" />
						<property name="dataSourceStore">
							<list>
								<bean class="com.binary.jdbc.ds.support.PoolDataSource">
									<constructor-arg value="${ds.jdbc.dsname}" />	<!-- name -->
									<constructor-arg value="Oracle10G" />	<!-- jdbcType -->
									<constructor-arg value="org.apache.commons.dbcp.BasicDataSource" />	<!-- poolClass -->
									<constructor-arg>				<!-- properties -->
										<map>
											<entry key="driverClassName" value="${ds.jdbc.driver}" />
											<entry key="url" value="${ds.jdbc.url}" />
											<entry key="username" value="${ds.jdbc.user}" />
											<entry key="password" value="${ds.jdbc.passwd}" />
											
											<entry key="initialSize" value="${ds.conn.pool.initialSize}" />
											<entry key="maxActive" value="${ds.conn.pool.maxActive}" />
											<entry key="maxIdle" value="${ds.conn.pool.maxIdle}" />
											<entry key="minIdle" value="${ds.conn.pool.minIdle}" />
											<entry key="validationQuery" value="${ds.conn.pool.validationQuery}" />
											<entry key="maxOpenPreparedStatements" value="${ds.conn.pool.maxOpenPreparedStatements}" />
										</map>
									</constructor-arg>
								</bean>
							</list>
						</property>
					</bean>
				</constructor-arg>
			</bean>
		</constructor-arg>
	</bean>
	
	
	
	

	<bean id="sqlMapClientTemplate" class="com.binary.framework.ibatis.IBatisSqlMapClientTemplate" primary="true">
		<property name="dataSource" ref="dataSource" />
		<property name="sqlMapClient">
			<bean class="com.binary.framework.ibatis.IBatisSqlMapClientFactory">
				<property name="configLocations">
					<list>
						<description>排序：优先加载数据库表的sql定义（文件名带model字样），使得后续加载的自定义sql定义可以引用先加载的文件中的定义</description>
						<value>classpath:sql/sql-map-config.xml</value>
					</list>
				</property>
			</bean>
		</property>
		<property name="sqlExecutor">
			<bean class="com.binary.framework.ibatis.IBatisSqlExecutor">
				<property name="sqlHandlers">
					<list>
						<bean class="com.binary.framework.ibatis.PagingSqlHandler" />
					</list>
				</property>
			</bean>
		</property>
	</bean>
	
</beans>
